name: Build IPTV
on:
  schedule:    
    - cron: "0 */3 * * *"
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Please wait while Tsuka injects dark energy into the system...
      uses: actions/checkout@v2
    - name: Downloading M3U
      run: |
        echo 'Downloading M3U'
        exec 3>&1 &>/dev/null
        go get github.com/aquilax/m3u-combine
        cd 0        
        wget -O 0_1.m3u https://i.mjh.nz/SamsungTVPlus/us.m3u8
        wget -O 0_2.m3u https://i.mjh.nz/PlutoTV/us.m3u8
        wget -O 0_3.m3u ${{ secrets.TV2 }}
        wget -O plex.m3u https://i.mjh.nz/Plex/us.m3u8
        wget -O uk_samsung.m3u https://github.com/iptv-org/iptv/raw/master/streams/uk_samsung.m3u 
        wget -O uk_rakuten.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/uk_rakuten.m3u 
        wget -O uk_sportstribal.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/uk_sportstribal.m3u 
        wget -O us_adultswim.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_adultswim.m3u 
        wget -O us_bumblebee.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_bumblebee.m3u 
        wget -O us_distro.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_distro.m3u 
        wget -O us_fubo.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_fubo.m3u 
        wget -O us_glewedtv.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_glewedtv.m3u 
        wget -O us_imdbtv.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_imdbtv.m3u 
        wget -O us_klowdtv.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_klowdtv.m3u 
        wget -O us_redbox.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_redbox.m3u 
        wget -O us_roku.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_roku.m3u 
        wget -O us_stirr.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_stirr.m3u 
        wget -O us_tcl.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_tcl.m3u 
        wget -O us_tubi.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_tubi.m3u 
        wget -O us_vizio.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_vizio.m3u 
        wget -O us_xumo.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/us_xumo.m3u 
        wget -O ie_samsung.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/ie_samsung.m3u 
        wget -O ca_stingray.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/ca_stingray.m3u 
        wget -O ca_samsung.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/ca_samsung.m3u 
        wget -O au_samsung.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/au_samsung.m3u 
        wget -O jp.m3u https://raw.githubusercontent.com/iptv-org/iptv/master/streams/jp.m3u 
        wget -O vod2.m3u ${{ secrets.vod }}
        curl -H "Authorization: token ${{ secrets.JAPAN }}" \
        -H 'Accept: application/vnd.github.v3.raw' \
        -o 1.m3u \
        -L ${{ secrets.JP3 }}
    - name: Downloading EPG
      run: |
        echo 'Downloading EPG'
        exec 3>&1 &>/dev/null
        cd 0
        wget http://epg.51zmt.top:8000/gat.xml
        wget -O paid.xml ${{ secrets.PAID_EPG }}
        wget -O plex.xml https://i.mjh.nz/Plex/all.xml
        wget -O samsung.xml https://i.mjh.nz/SamsungTVPlus/all.xml
        wget -O pluto.xml https://i.mjh.nz/PlutoTV/all.xml
        curl -H "Authorization: token ${{ secrets.JAPAN }}" \
        -H 'Accept: application/vnd.github.v3.raw' \
        -o 1.xml \
        -L ${{ secrets.ONE_EPG }}
        wget -O iptvjapan.xml https://iptv-org.github.io/epg/guides/jp/tvguide.myjcom.jp.epg.xml
    - name: Crafting M3U
      run: |
        echo 'Crafting M3U'
        exec 3>&1 &>/dev/null
        cd 0
        touch events.m3u
        echo "#EXTM3U" > events.m3u
        grep -E '^#EXTINF.*tvg\-name=\"([^#])*\".*group\-title=\"(Sports MLB|Sports ESPN+|Sports NBA NCAAB NCAAW|Sports NFL NCAAF|Sports NHL|Sports PPV|Sports UFC BOXING WWE)\"' -A 1 0_3.m3u | sed "/^--$/d" >> events.m3u
        sed 's/\( group-title="\)[^"]*/\1Sporting Events/' -i events.m3u
        touch live.m3u
        echo "#EXTM3U" > live.m3u
        grep -E '^#EXTINF.*tvg\-name=\"([^#])*\".*group\-title=\"(Sports|Kids|News|Music|Documentary|Entertainment|US Local|US|UK|Canada)\"' -A 1 0_3.m3u | sed "/^--$/d" >> live.m3u
        sed 's/group-title="Canada"/group-title="Canadian Networks"'/ -i live.m3u
        sed 's/group-title="US Local"/group-title="Local Networks"'/ -i live.m3u
        sed 's/group-title="US"/group-title="Network TV"'/ -i live.m3u
        sed 's/group-title="Sports"/group-title="Sporting Networks"'/ -i live.m3u
        sed 's/group-title="UK"/group-title="United Kingdom"'/ -i live.m3u
        cat zoro.txt | ~/go/bin/m3u-combine > zoro.m3u
        sed 's/.png", /.png" group-title="Free TV", /' -i zoro.m3u
        cat 0.txt | ~/go/bin/m3u-combine > 0.m3u
        sed 's/\( group-title="\)[^"]*/\1Free TV/' -i 0.m3u
        sed 's/status="online", /status="online", group-title="Free TV" '/ -i 0.m3u
        sed 's/status="blocked", /status="blocked", group-title="Free TV" '/ -i 0.m3u
        sed 's/status="timeout", /status="timeout", group-title="Free TV" '/ -i 0.m3u
        sed 's/status="error", /status="error", group-title="Free TV" '/ -i 0.m3u
        cat 1.txt | ~/go/bin/m3u-combine > combined.m3u
        sed 's/group-title="Free TV", group-title="Free TV"/group-title="Free TV",'/ -i combined.m3u
        awk '/En Español|en español|En español|en Español|español|Español|Espanol|espanol|Latino|latino|spain|Spain|Spanish|spanish|Latin|Latin|Latido|latido| con| la| Sony Canal| Perfecto| perfecto| Mundo| amigos| escándalos| Estrella | nosotras| noticias| Cine / {while (/En Español|en español|En español|en Español|español|Español|Espanol|espanol|Latino|latino|spain|Spain|Spanish|spanish|Latin|Latin|Latido|latido| con| la| Sony Canal| Perfecto| perfecto| Mundo| amigos| escándalos| Estrella | nosotras| noticias| Cine / && getline>0) ; next} 1' combined.m3u > SAVENAME.TXT
        rm combined.m3u
        mv SAVENAME.TXT combined.m3u
        sed -i 's/pluto.tv/pluto.tv/g' combined.m3u
        sed -i 's/amagi.tv/amagi.tv/g' combined.m3u
        sed -i 's/amazonaws.com/amazonaws.com/g' combined.m3u
        sed -i 's/akamaized.net/akamaized.net/g' combined.m3u
        sed -i 's/stream.ne.jp/stream.ne.jp/g' combined.m3u
        sed 's/(1080p)//' -i combined.m3u
        sed 's/(720p)//' -i combined.m3u
        sed 's/(540p)//' -i combined.m3u
        sed -i 's/\[//' -i combined.m3u
        sed -i 's/\]//' -i combined.m3u
        sed -i 's/(YouTube)//' -i combined.m3u
        sed -s 's/(French AI Translated Closed-Captioning)//' -i combined.m3u
        sed -s 's/(Bahasa Indonesia AI Translated Closed-Captioning)//' -i combined.m3u
        sed -s 's/(Chinese Traditional AI Translated Closed-Captioning)//' -i combined.m3u
        sed -s 's/Not 24\/7//' -i combined.m3u
        sed -s 's/(480p)//' -i combined.m3u
        sed -s 's/(360p)//' -i combined.m3u
        sed -s 's/(240p)//' -i combined.m3u
        sed -s 's/(England)//' -i combined.m3u
        sed -s 's/(144p)//' -i combined.m3u
        sed -s 's/(474p)//' -i combined.m3u
        sed -s 's/(2160p)//' -i combined.m3u
        sed -s 's/(STIRR)//' -i combined.m3u
        sed -s 's/(Canada)//' -i combined.m3u
        sed -s 's/(Test for Bitcentral)//' -i combined.m3u
        sed -s 's/(BumbleBee TV)//' -i combined.m3u
        sed -s 's/(Bumblebee TV)//' -i combined.m3u
        sed -s 's/BumbleBee TV//' -i combined.m3u
        sed -s 's/Bumblebee TV//' -i combined.m3u
        sed -s 's/(English Subs)//' -i combined.m3u
        sed -s 's/(Indonesian Subs)//' -i combined.m3u
        sed -s 's/(XUMO)//' -i combined.m3u
        sed -s 's/(Redbox)//' -i combined.m3u
        sed -s 's/Geo-blocked//' -i combined.m3u
        sed -s 's/(768p)//' -i combined.m3u
        sed -s 's/(432p)//' -i combined.m3u
        sed -s 's/(504p)//' -i combined.m3u
        sed -s 's/(UK)//' -i combined.m3u
        sed -s 's/(576p)//' -i combined.m3u
        sed -s 's/(234p)//' -i combined.m3u
        sed -s 's/(Australia)//' -i combined.m3u
        sed -i 's/pluto.tv/pluto.tv/g' combined.m3u
        sed -i 's/amagi.tv/amagi.tv/g' combined.m3u
        sed -i 's/amazonaws.com/amazonaws.com/g' combined.m3u
        sed -i 's/akamaized.net/akamaized.net/g' combined.m3u
        sed -i 's/stream.ne.jp/stream.ne.jp/g' combined.m3u
        sed -i 's/STIRR//' -i combined.m3u
        sed -i 's/US SPORT//' -i combined.m3u
        sed -i 's/STIRR CITY//' -i combined.m3u
    - name: Installing XMLTV
      run: |
        echo 'Installing XMLTV'
        exec 3>&1 &>/dev/null
        sudo apt update
        sudo apt install xmltv
    - name: Crafting EPG
      run: |
        echo 'Crafting EPG'
        exec 3>&1 &>/dev/null
        cd 0
        tv_cat 1.xml iptvjapan.xml > japan1.xml
        tv_cat japan1.xml gat.xml > japan.xml
        tv_merge -i pluto.xml -m plex.xml -o plutoplex.xml
        tv_merge -i plutoplex.xml -m samsung.xml -o free.xml
        tv_merge -i free.xml -m japan.xml -o merge3.xml
        tv_merge -i paid.xml -m merge3.xml -o merge.xml
        rm -rf ../.git/objects/pack
        mkdir 1 && cd 1
        wget ${{ secrets.YAY }}
        unzip ${{ secrets.YAY2 }}
        cp /home/runner/work/fictional-pancake/fictional-pancake/0/merge.xml ${{ secrets.DOOM }}
        cp /home/runner/work/fictional-pancake/fictional-pancake/0/combined.m3u ${{ secrets.WAR }}
    - name: Deploying IPTV
      uses: dswistowski/surge-sh-action@v1
      with:
         domain: ${{ secrets.surge_domain }}
         project: '/home/runner/work/fictional-pancake/fictional-pancake/0/1'
         login: ${{ secrets.surge_login }}
         token: ${{ secrets.surge_token }}
